- name: Find EC2 {{my_host.key}}
  ec2_remote_facts:
    region: "{{region}}"
    # cert error occurred after goskope
    validate_certs: no
    filters:
      instance-state-name: running
      "tag:Name": "{{my_host.key}}"
      "tag:appformix_role": "{{my_host.value.appformix_role}}"
      "tag:uuid_tag": "{{uuid_tag}}"
  register: found_ec2
#- debug: var=found_ec2
- name: Set host {{my_host.key}} if found
  add_host:
    hostname: "{{my_host.key}}"
    # it it public_ip_address here
    ansible_host: "{{ found_ec2.instances.0.public_ip_address }}"
    private_dns_name: "{{ found_ec2.instances.0.private_dns_name }}"
    groups: "{{my_host.value.inventory_group}}"
    ansible_user: "{{my_host.value.user}}"
  when:
    - found_ec2.instances.0 is defined
    - "'private_dns_name' in found_ec2.instances.0"
- name: Create EC2 {{my_host.key}} if not found
  ec2:
    key_name: "{{keyname}}"
    instance_type: "{{my_host.value.instance_type}}"
    image: "{{my_host.value.image}}"
    wait: yes
    region: "{{region}}"
    validate_certs: no
    group: "{{my_host.value.security_group}}"
    count: 1
    vpc_subnet_id: "{{subnet_controller}}"
    assign_public_ip: yes
    user_data: "{{lookup('template', 'user-data.sh.j2')}}"
    # to reduce update conflict with subsequent provisioning
    wait: yes
    instance_profile_name: "{{my_host.value.iam_role}}"
    volumes:
      - device_name: /dev/sda1
        volume_size: "{{my_host.value.volume_size}}"
    instance_tags:
      Name: "{{my_host.key}}"
      appformix_role: "{{my_host.value.appformix_role}}"
      uuid_tag: "{{uuid_tag}}"
    state: present
  register: ec2_created
  when: "not found_ec2.instances.0 is defined"
  #when: "not my_host.key in groups['aws_ec2']"
#- debug: var=ec2_created
- name: Add host {{my_host.key}} with public ip if created
  add_host:
    hostname: "{{my_host.key}}"
    ansible_host: "{{ ec2_created.instances.0.public_ip }}"
    private_dns_name: "{{ ec2_created.instances.0.private_dns_name }}"
    groups: "{{my_host.value.inventory_group}}"
    ansible_user: "{{my_host.value.user}}"
  when:
    - "not ec2_created|skipped"
    - ec2_created is defined
    - ec2_created.instances.0 is defined


